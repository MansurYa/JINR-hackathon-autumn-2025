"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ BAAI/bge-large-en-v1.5
—Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏.
"""

import os
from huggingface_hub import snapshot_download
from tqdm import tqdm


def download_model_with_progress(
    model_name: str = "BAAI/bge-large-en-v1.5",
    cache_dir: str = None
):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å —Å HuggingFace Hub —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.

    :param model_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –Ω–∞ HuggingFace
    :param cache_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ~/.cache/huggingface)
    """
    print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏: {model_name}")
    print("-" * 60)

    if cache_dir is None:
        cache_dir = os.path.expanduser("~/.cache/huggingface/hub")

    print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {cache_dir}")
    print()

    try:
        # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
        model_path = snapshot_download(
            repo_id=model_name,
            cache_dir=cache_dir,
            resume_download=True,  # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä—ã–≤–µ
            local_files_only=False,
            tqdm_class=tqdm  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ tqdm –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        )

        print()
        print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–∞!")
        print(f"üìç –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏: {model_path}")
        print()
        print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å –≤ —Å–≤–æ—ë–º –∫–æ–¥–µ:")
        print(f'generator = EmbeddingsGenerator(model_name="{model_name}")')

        return model_path

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
        return None


def check_model_exists(model_name: str = "BAAI/bge-large-en-v1.5") -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–∫–∞—á–∞–Ω–∞ –ª–∏ —É–∂–µ –º–æ–¥–µ–ª—å.

    :param model_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
    :return: True –µ—Å–ª–∏ –º–æ–¥–µ–ª—å —É–∂–µ –µ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ
    """
    from sentence_transformers import SentenceTransformer

    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å –±–µ–∑ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        _ = SentenceTransformer(model_name, device='cpu')
        return True
    except:
        return False


if __name__ == "__main__":
    MODEL_NAME = "BAAI/bge-large-en-v1.5"

    print("=" * 60)
    print("  –ó–∞–≥—Ä—É–∑—á–∏–∫ –º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç–º–±–µ–¥–∏–Ω–≥–æ–≤")
    print("=" * 60)
    print()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–æ–¥–µ–ª–∏
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–µ–ª—å –ª–æ–∫–∞–ª—å–Ω–æ...")
    if check_model_exists(MODEL_NAME):
        print("‚úÖ –ú–æ–¥–µ–ª—å —É–∂–µ —Å–∫–∞—á–∞–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print()
        user_input = input("–°–∫–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ? (y/n): ").lower()
        if user_input != 'y':
            print("–û—Ç–º–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏.")
            exit(0)

    print()

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
    model_path = download_model_with_progress(MODEL_NAME)

    if model_path:
        print()
        print("=" * 60)
        print("üéâ –ì–æ—Ç–æ–≤–æ! –ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ –≤ –≤–∞—à–µ–º —Ö–∞–∫–∞—Ç–æ–Ω–µ!")
        print("=" * 60)
